{"version":3,"sources":["data/contact.js","parrotComponents/ParrotIcons.js","parrotComponents/ParrotFooter.js","data/routes.js","parrotComponents/Template/Hamburger.js","parrotComponents/ParrotNavbar.js","layout/Main.js","parrotPages/ParrotAbout.js","parrotPages/ParrotContact.js","parrotPages/ParrotHome.js","layout/Cell.js","parrotPages/ParrotProjects.js","assets/configurations.js","services/gitService.js","data/resume.pdf","parrotPages/ParrotResume.js","ParrotApp.js","reportWebVitals.js","index.js"],"names":["data","link","label","icon","faGithub","faLinkedinIn","faEnvelope","ContactIcons","className","map","s","onClick","url","window","open","size","ParrotFooter","id","Container","fluid","Col","ParrotIcons","routes","path","Menu","lazy","Hamburger","useState","setOpen","fallback","right","isOpen","l","to","index","ParrotNavbar","filter","Main","props","titleTemplate","defaultTitle","defer","title","name","content","description","children","ParrotAbout","style","marginTop","ParrotContact","handleChange","event","target","value","type","checked","setState","handleSubmit","preventDefault","disabled","templateParams","from_name","state","email","to_name","message","emailjs","then","res","console","log","status","emailSent","messageVisible","setTimeout","catch","err","Form","onSubmit","this","Group","Label","htmlFor","Control","placeholder","onChange","required","as","rows","textAlign","React","Component","ParrotHome","strings","typeSpeed","backDelay","backSpeed","loop","cursorChar","marginBottom","symbol","class","src","alt","Cell","href","dayjs","date","format","process","image","desc","ParrotProjects","project","gitCreds","getPinnedRepo","a","axios","headers","Authorization","method","query","result","parseResult","finalRes","obj","push","node","openGraphImageUrl","stars","stargazers","totalCount","languages","edges","updatedAt","getPinnedRepoData","parsedResult","user","pinnedItems","ParrotResume","pdfjs","GlobalWorkerOptions","workerSrc","version","file","resume","pageNumber","width","App","repoData","headerLinks","home","subtitle","text","about","contact","backgroundColor","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"8XA0BeA,EAlBF,CACX,CACEC,KAAM,mCACNC,MAAO,SACPC,KAAMC,YAER,CACEH,KAAM,4CACNC,MAAO,WACPC,KAAME,gBAER,CACEJ,KAAM,oCACNC,MAAO,QACPC,KAAMG,e,OCJKC,EAVM,kBACnB,qBAAKC,UAAU,QAAf,SACKR,EAAKS,KAAI,SAACC,GAAD,OACR,sBAAMF,UAAU,SAASG,QAAS,kBAPxBC,EAOqCF,EAAET,UANvDY,OAAOC,KAAKF,EAAK,UADF,IAACA,GAOV,SACE,cAAC,IAAD,CAAiBT,KAAMO,EAAEP,KAAMK,UAAU,aAAaO,KAAK,eCQtDC,MAhBf,WACE,OAEE,aADA,CACA,UAAQC,GAAG,SAAX,SACE,cAACC,EAAA,EAAD,CACEC,OAAO,EACPX,UAAU,yCAFZ,SAIE,cAACY,EAAA,EAAD,CAAKZ,UAAU,MAAf,SACE,cAACa,EAAD,CAAaN,KAAK,cCUbO,EAvBA,CACb,CACEpB,MAAO,OACPqB,KAAM,KAER,CACErB,MAAO,QACPqB,KAAM,UAER,CACErB,MAAO,WACPqB,KAAM,aAER,CACErB,MAAO,SACPqB,KAAM,WAER,CACErB,MAAO,UACPqB,KAAM,a,QCdJC,EAAOC,gBAAK,kBAAM,qCAqCTC,EAnCG,WAChB,MAAwBC,oBAAS,GAAjC,mBAAOb,EAAP,KAAac,EAAb,KAEA,OACE,sBAAKpB,UAAU,sBAAf,UACE,qBAAKA,UAAU,OAAOS,GAAG,eAAzB,SACE,6BACGH,EACC,oBAAIN,UAAU,kBAAd,SACE,qBAAKG,QAAS,kBAAMiB,GAASd,IAAON,UAAU,aAA9C,sBAGF,oBAAIA,UAAU,iBAAd,SACE,qBAAKG,QAAS,kBAAMiB,GAASd,IAAON,UAAU,aAA9C,0BAKR,cAAC,WAAD,CAAUqB,SAAU,6BAApB,SACE,cAACL,EAAD,CAAMM,OAAK,EAACC,OAAQjB,EAApB,SACE,oBAAIN,UAAU,eAAd,SACGc,EAAOb,KAAI,SAACuB,GAAD,OACV,6BACE,cAAC,IAAD,CAAMC,GAAID,EAAET,KAAMZ,QAAS,kBAAMiB,GAASd,IAA1C,SACE,oBAAIN,UAAWwB,EAAEE,OAAS,WAA1B,SAAuCF,EAAE9B,WAFpC8B,EAAE9B,oBCLViC,MAnBf,WACE,OACE,yBAAQlB,GAAG,SAAX,UACE,qBAAKT,UAAU,QAAf,SACE,6BACGc,EACEc,QAAO,SAACJ,GAAD,OAAQA,EAAEE,SACjBzB,KAAI,SAACuB,GAAD,OACH,6BACE,cAAC,IAAD,CAAMC,GAAID,EAAET,KAAZ,SAAmBS,EAAE9B,SADd8B,EAAE9B,cAMnB,cAAC,EAAD,Q,QCESmC,EAjBF,SAACC,GAAD,OACX,eAAC,IAAD,WACE,eAAC,IAAD,CACEC,cAAc,qBACdC,aAAa,gBACbC,OAAO,EAHT,UAKGH,EAAMI,OAAS,gCAAQJ,EAAMI,QAC9B,sBAAMC,KAAK,cAAcC,QAASN,EAAMO,iBAE1C,sBAAK5B,GAAG,UAAR,UACI,cAAC,EAAD,IACF,qBAAKA,GAAG,OAAR,SAAgBqB,EAAMQ,kBCuDbC,MApEf,SAAqBT,GACnB,OACE,cAAC,EAAD,CAAMI,MAAM,QAAQG,YAAY,kBAAhC,SACE,0BAASrC,UAAU,OAAnB,UACE,iCACE,sBAAKA,UAAU,QAAf,UACE,oBAAI,cAAY,UAAhB,sBAGA,wDAGJ,oBAAI,cAAY,UAAhB,mBACA,wXAOA,oBAAI,cAAY,UAAUwC,MAAO,CAAEC,UAAW,OAA9C,oBAGA,+BACE,wCACA,wCACA,yCACA,yCACA,uCACA,4CAEF,oBAAI,cAAY,UAAUD,MAAO,CAAEC,UAAW,OAA9C,4BAGA,+BACE,kEACA,oEACA,kEACA,oEACA,6DACA,mDACA,sHAIA,2FACA,yDACA,iEACA,sDACA,oDACA,6EAEF,oBAAI,cAAY,UAAUD,MAAO,CAAEC,UAAW,OAA9C,wBAGA,+BACE,uDACA,6DACA,wDACA,+G,uBC4FKC,E,kDApJb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAYRa,aAAe,SAACC,GACd,IAAMC,EAASD,EAAMC,OACfC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC7DX,EAAOU,EAAOV,KAEpB,EAAKc,SAAL,eACGd,EAAOW,KAnBO,EAuBnBI,aAAe,SAACN,GACdA,EAAMO,iBACN,EAAKF,SAAS,CACZG,UAAU,IAGZ,IAAIC,EAAiB,CACnBC,UAAW,EAAKC,MAAMpB,KACtBqB,MAAO,EAAKD,MAAMC,MAClBC,QAAS,6BACTC,QAAS,EAAKH,MAAMG,SAGtBC,OAEI,kBACA,mBACAN,EACA,8BAEDO,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACRA,EAAIG,OACN,EAAKf,SAAS,CACZG,UAAU,EACVa,WAAW,EACXC,gBAAgB,IAGlB,EAAKjB,SAAS,CACZG,UAAU,EACVa,WAAW,EACXC,gBAAgB,IAIpBC,YAAW,WACT,EAAKlB,SAAS,CAAEiB,gBAAgB,MAC/B,QAEJE,OAAM,SAACC,GACNP,QAAQC,IAAIM,GAEZ,EAAKpB,SAAS,CACZG,UAAU,EACVa,WAAW,EACXC,gBAAgB,IAGlBC,YAAW,WACT,EAAKlB,SAAS,CAAEiB,gBAAgB,MAC/B,SAxEP,EAAKX,MAAQ,CACXpB,KAAM,GACNqB,MAAO,GACPE,QAAS,GACTQ,gBAAgB,EAChBd,UAAU,EACVa,WAAW,GAEbN,OAAa,8BAVI,E,0CA8EnB,WACE,OACE,cAAC,EAAD,CAAMzB,MAAM,UAAUG,YAAY,aAAlC,SACE,0BAASrC,UAAU,OAAnB,UACE,iCACE,sBAAKA,UAAU,QAAf,UACE,oBAAI,cAAY,UAAhB,wBACA,2EAGJ,eAACsE,EAAA,EAAD,CAAMC,SAAUC,KAAKtB,aAArB,UACE,eAACoB,EAAA,EAAKG,MAAN,WACE,cAACH,EAAA,EAAKI,MAAN,CAAYC,QAAQ,YAApB,uBACA,cAACL,EAAA,EAAKM,QAAN,CACEnE,GAAG,YACHoE,YAAY,YACZ1C,KAAK,OACLY,KAAK,OACLD,MAAO0B,KAAKjB,MAAMpB,KAClB2C,SAAUN,KAAK7B,aACfoC,UAAQ,OAIZ,eAACT,EAAA,EAAKG,MAAN,WACE,cAACH,EAAA,EAAKI,MAAN,CAAYC,QAAQ,QAApB,mBACA,cAACL,EAAA,EAAKM,QAAN,CACEnE,GAAG,QACHoE,YAAY,aACZ1C,KAAK,QACLY,KAAK,QACLD,MAAO0B,KAAKjB,MAAMC,MAClBsB,SAAUN,KAAK7B,aACfoC,UAAQ,OAIZ,eAACT,EAAA,EAAKG,MAAN,WACE,cAACH,EAAA,EAAKI,MAAN,CAAYC,QAAQ,UAApB,qBACA,cAACL,EAAA,EAAKM,QAAN,CACEnE,GAAG,UACHoE,YAAY,8BACZ1C,KAAK,UACL6C,GAAG,WACHC,KAAK,IACLnC,MAAO0B,KAAKjB,MAAMG,QAClBoB,SAAUN,KAAK7B,aACfoC,UAAQ,OAIZ,qBAAKvC,MAAO,CAAE0C,UAAW,UAAzB,SACE,wBAAQlF,UAAU,SAASoD,SAAUoB,KAAKjB,MAAMH,SAAhD,oBAKDoB,KAAKjB,MAAMU,WAAaO,KAAKjB,MAAMW,gBAClC,mBAAGlE,UAAU,uBAAb,yBAEAwE,KAAKjB,MAAMU,WAAaO,KAAKjB,MAAMW,gBACnC,mBAAGlE,UAAU,mBAAb,wC,GA5IcmF,IAAMC,W,0CCErBC,EAAb,4JACE,WACE,OACE,8BACE,eAAC,EAAD,CAAMnD,MAAM,OAAOG,YAAY,gBAA/B,UACE,0BAASrC,UAAU,OAAnB,UACE,iCACE,sBAAKA,UAAU,QAAf,UACE,oBAAI,cAAY,UAAhB,2BACA,6BACE,cAAC,IAAD,CACEA,UAAU,oBACVsF,QAAS,CACP,gBACA,mBACA,gBACA,kBACA,SAEFC,UAAW,GACXC,UAAW,IACXC,UAAW,GACXC,MAAI,EACJC,WAAW,aAKnB,oBAAGnD,MAAO,CAAEoD,aAAc,OAA1B,iEACuD,IACrD,cAAC,IAAD,CAAMnE,GAAG,SAAT,sBAFF,4BAE6D,IAC3D,cAAC,IAAD,CAAMA,GAAG,UAAT,oBAHF,IAGoC,IAClC,cAAC,IAAD,CAAMA,GAAG,YAAT,sBAJF,OAI2C,IACzC,cAAC,IAAD,CAAMA,GAAG,WAAT,qBALF,UAOA,oBAAGe,MAAO,CAAEoD,aAAc,OAA1B,qBACU,cAAC,IAAD,CAAOC,OAAO,iCAAQnG,MAAM,eAGxC,qBAAKoG,MAAM,IAAX,SACE,qBACEA,MAAM,IACNC,IAAI,8BACJC,IAAI,uBA3ClB,GAAgCZ,aAqDjBC,I,iBC7BAY,EA3BF,SAAC,GAAD,IAAGzG,EAAH,EAAGA,KAAH,OACX,qBAAKQ,UAAU,iBAAf,SACE,0BAASA,UAAU,YAAnB,UACE,mCACE,6BAAI,mBAAGkG,KAAM1G,EAAKC,KAAd,SAAqBD,EAAK0C,UAC9B,uBAAMlC,UAAU,YAAhB,0BAA0CmG,IAAM3G,EAAK4G,MAAMC,OAAO,oBAEpE,mBAAGH,KAAM1G,EAAKC,KAAMO,UAAU,QAA9B,SACE,qBAAK+F,IAAG,UAAKO,IAAL,OAA8B9G,EAAK+G,OAASP,IAAKxG,EAAK0C,UAEhE,qBAAKlC,UAAU,cAAf,SACE,4BAAIR,EAAKgH,eCWFC,EAtBQ,SAAC3E,GAAD,OACrB,cAAC,EAAD,CACEI,MAAM,WACNG,YAAY,gBAFd,SAIE,0BAASrC,UAAU,OAAnB,UACE,iCACE,sBAAKA,UAAU,QAAf,UACE,oBAAI,cAAY,UAAhB,sBACA,qEAGH8B,EAAMtC,KAAKS,KAAI,SAACyG,GAAD,OACd,cAAC,EAAD,CACElH,KAAMkH,GACDA,EAAQvE,e,iCCFjBwE,EACoB,2CADpBA,EAEc,gBChBdC,EAAa,uCAAG,4BAAAC,EAAA,sEACCC,IAAM,CACzB1G,IAAK,iCACL2G,QAAS,CAAEC,cAAe,UAAYL,GACtCM,OAAQ,OACRzH,KAAM,CACJ0H,MAAM,+CAAD,OAEkBP,EAFlB,i4BANW,cACdQ,EADc,yBAuCbA,GAvCa,2CAAH,qDA0CbC,GAAc,SAAAD,GAClB,IAD4B,EACxBE,EAAW,GADa,cAEbF,GAFa,IAE5B,IAAI,EAAJ,qBAAsB,CAAC,IAAfG,EAAc,QACpBD,EAASE,KAAK,CACZrF,MAAOoF,EAAIE,KAAKrF,KAChBqE,KAAMc,EAAIE,KAAKnF,YACfkE,MAAOe,EAAIE,KAAKC,kBAChBC,MAAOJ,EAAIE,KAAKG,WAAWC,WAC3BC,UAAWP,EAAIE,KAAKK,UAAUC,MAAM7H,KAAI,SAAAT,GAAS,OAAOA,EAAKgI,KAAKrF,QAClEiE,KAAMkB,EAAIE,KAAKO,UACftI,KAAM6H,EAAIE,KAAKpH,OAVS,8BAa5B,OAAOiH,GAGHW,GAAiB,uCAAG,8BAAAnB,EAAA,sEACHD,IADG,cAClBO,EADkB,OAElBc,EAAeb,GAAYD,EAAO3H,KAAKA,KAAK0I,KAAKC,YAAYL,OAF3C,kBAGjBG,GAHiB,2CAAH,qDAMRD,M,SCnEA,OAA0B,mC,SCgC1BI,OA1Bf,WAEE,OADAC,KAAMC,oBAAoBC,UAA1B,kDAAiFF,KAAMG,QAAvF,kBAEE,cAAC,EAAD,CAAMtG,MAAM,SAASG,YAAY,gBAAjC,SACE,0BAASrC,UAAU,OAAnB,UACE,iCACE,sBAAKA,UAAU,QAAf,UACE,oBAAI,cAAY,UAAhB,oBACA,6DAGJ,cAAC,UAAD,UACG,gBAAGO,EAAH,EAAGA,KAAH,OACC,cAAC,KAAD,CAAUkI,KAAMC,GAAhB,SACE,cAAC,KAAD,CAAMC,WAAY,EAAGC,MAAOrI,EAAKqI,MAAQrI,EAAKqI,MAAQ,SAI5D,qBAAKpG,MAAO,CAAE0C,UAAW,UAAzB,SACE,wBAAQlF,UAAU,SAAlB,8BCZG6I,GAAb,kDAME,WAAY/G,GAAQ,IAAD,8BACjB,cAAMA,IACDyB,MAAQ,CACXuF,SAAU,GACV5G,MAAO,gBACP6G,YAAa,CACX,CAAE7G,MAAO,OAAQnB,KAAM,KACvB,CAAEmB,MAAO,QAASnB,KAAM,UACxB,CAAEmB,MAAO,UAAWnB,KAAM,aAE5BiI,KAAM,CACJ9G,MAAO,gBACP+G,SAAU,CACR,gBACA,mBACA,YACA,0BACA,SAEFC,KAAM,iCAERC,MAAO,CACLjH,MAAO,YAETkH,QAAS,CACPlH,MAAO,aACP+G,SAAU,yCA1BG,EANrB,4FACE,4BAAApC,EAAA,sEACuBmB,KADvB,OACMc,EADN,OAEEtE,KAAKvB,SAAS,CAAE6F,aAFlB,gDADF,0EAoCE,WAAU,IAAD,OACP,OACE,cAAC,IAAD,UACE,sBAAKtG,MAAO,CAAE6G,gBAAiB,WAA/B,UACE,eAAC3I,EAAA,EAAD,CAAWV,UAAU,MAAMW,OAAO,EAAlC,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOI,KAAK,IAAIuI,OAAK,EAACC,OAAQ,kBAAM,cAAC,EAAD,OACpC,cAAC,IAAD,CAAOxI,KAAK,SAASuI,OAAK,EAACC,OAAQ,kBAAM,cAAC,EAAD,OACzC,cAAC,IAAD,CACExI,KAAK,YACLuI,OAAK,EACLC,OAAQ,kBAAM,cAAC,EAAD,CAAgB/J,KAAM,EAAK+D,MAAMuF,cAEjD,cAAC,IAAD,CAAO/H,KAAK,UAAUuI,OAAK,EAACC,OAAQ,kBAAM,cAAC,GAAD,OAC1C,cAAC,IAAD,CAAOxI,KAAK,WAAWuI,OAAK,EAACC,OAAQ,kBAAM,cAAC,EAAD,UAE7C,cAAC,EAAD,aApDV,GAAyBnE,aA2DVyD,MC5DAW,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9F,MAAK,YAAkD,IAA/C+F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCCdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.304f02b7.chunk.js","sourcesContent":["import { faGithub } from '@fortawesome/free-brands-svg-icons/faGithub';\r\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons/faLinkedinIn';\r\n// import { faAngellist } from '@fortawesome/free-brands-svg-icons/faAngellist';\r\n// import { faTwitter } from '@fortawesome/free-brands-svg-icons/faTwitter';\r\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons/faEnvelope';\r\n// See https://fontawesome.com/icons?d=gallery&s=brands,regular&m=free\r\n// to add other icons.\r\n\r\nconst data = [\r\n  {\r\n    link: 'https://github.com/harshil-darji',\r\n    label: 'Github',\r\n    icon: faGithub,\r\n  },\r\n  {\r\n    link: 'https://www.linkedin.com/in/harshil-darji',\r\n    label: 'LinkedIn',\r\n    icon: faLinkedinIn,\r\n  },\r\n  {\r\n    link: 'mailto:harshildarji1002@gmail.com',\r\n    label: 'Email',\r\n    icon: faEnvelope,\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport data from \"../data/contact\";\r\n\r\nconst openLink = (url) => {\r\n  window.open(url, '_blank');\r\n}\r\n\r\nconst ContactIcons = () => (\r\n  <div className=\"icons\">\r\n      {data.map((s) => (\r\n        <span className=\"faIcon\" onClick={()=>openLink(s.link)}>\r\n          <FontAwesomeIcon icon={s.icon} className=\"icon_color\" size=\"2x\"/>\r\n        </span>\r\n      ))}\r\n  </div>\r\n);\r\n\r\nexport default ContactIcons;\r\n","import React from \"react\";\r\nimport { Col, Container } from \"react-bootstrap\";\r\nimport ParrotIcons from \"./ParrotIcons\";\r\n\r\nfunction ParrotFooter() {\r\n  return (\r\n    //TODO: Adjust footer ffs\r\n    <footer id=\"footer\">\r\n      <Container\r\n        fluid={true}\r\n        className=\"border-top justify-content-between p-3\"\r\n      >\r\n        <Col className=\"p-0\">\r\n          <ParrotIcons size=\"sm\" />\r\n        </Col>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default ParrotFooter;\r\n","const routes = [\r\n  {\r\n    label: \"Home\",\r\n    path: \"/\",\r\n  },\r\n  {\r\n    label: \"About\",\r\n    path: \"/about\",\r\n  },\r\n  {\r\n    label: \"Projects\",\r\n    path: \"/projects\",\r\n  },\r\n  {\r\n    label: \"Resume\",\r\n    path: \"/resume\",\r\n  },\r\n  {\r\n    label: \"Contact\",\r\n    path: \"/contact\",\r\n  },\r\n];\r\n\r\nexport default routes;","import React, { Suspense, lazy, useState } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../../data/routes';\r\n\r\nconst Menu = lazy(() => import('react-burger-menu/lib/menus/slide'));\r\n\r\nconst Hamburger = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"hamburger-container\">\r\n      <nav className=\"main\" id=\"hambuger-nav\">\r\n        <ul>\r\n          {open ? (\r\n            <li className=\"menu close-menu\">\r\n              <div onClick={() => setOpen(!open)} className=\"menu-hover\">&#10005;</div>\r\n            </li>\r\n          ) : (\r\n            <li className=\"menu open-menu\">\r\n              <div onClick={() => setOpen(!open)} className=\"menu-hover\">&#9776;</div>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n      <Suspense fallback={<></>}>\r\n        <Menu right isOpen={open}>\r\n          <ul className=\"hamburger-ul\">\r\n            {routes.map((l) => (\r\n              <li key={l.label}>\r\n                <Link to={l.path} onClick={() => setOpen(!open)}>\r\n                  <h3 className={l.index && 'index-li'}>{l.label}</h3>\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </Menu>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hamburger;\r\n","import React from \"react\";\r\nimport routes from '../data/routes';\r\nimport { Link } from 'react-router-dom';\r\nimport Hamburger from \"./Template/Hamburger\";\r\n\r\nfunction ParrotNavbar() {\r\n  return (\r\n    <header id=\"header\">\r\n      <nav className=\"links\">\r\n        <ul>\r\n          {routes\r\n            .filter((l) => !l.index)\r\n            .map((l) => (\r\n              <li key={l.label}>\r\n                <Link to={l.path}>{l.label}</Link>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </nav>\r\n      <Hamburger />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default ParrotNavbar;","import React from \"react\";\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\nimport ParrotNavbar from \"../parrotComponents/ParrotNavbar\";\r\n\r\nconst Main = (props) => (\r\n  <HelmetProvider>\r\n    <Helmet\r\n      titleTemplate=\"%s | Harshil Darji\"\r\n      defaultTitle=\"Harshil Darji\"\r\n      defer={false}\r\n    >\r\n      {props.title && <title>{props.title}</title>}\r\n      <meta name=\"description\" content={props.description} />\r\n    </Helmet>\r\n    <div id=\"wrapper\">\r\n        <ParrotNavbar/>\r\n      <div id=\"main\">{props.children}</div>\r\n    </div>\r\n  </HelmetProvider>\r\n);\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Main from \"../layout/Main\";\r\n\r\nfunction ParrotAbout(props) {\r\n  return (\r\n    <Main title=\"About\" description=\"Learn aboout Me\">\r\n      <article className=\"post\">\r\n        <header>\r\n          <div className=\"title\">\r\n            <h2 data-testid=\"heading\">\r\n              About Me\r\n            </h2>\r\n            <p>Something about me</p>\r\n          </div>\r\n        </header>\r\n        <h4 data-testid=\"heading\">Intro</h4>\r\n        <p>\r\n          I am a graduate student currently pursuing Computer Engineering at San\r\n          Jose State University. I am interested in Web Development with the\r\n          MEAN and MERN stack and love to create projects. I am also interested\r\n          in Data Science and it's applications. If you think I can be helpful\r\n          to you or would like to meet me, please feel free to get in touch.\r\n        </p>\r\n        <h4 data-testid=\"heading\" style={{ marginTop: \"2em\" }}>\r\n          I like\r\n        </h4>\r\n        <ul>\r\n          <li>Gaming</li>\r\n          <li>Soccer</li>\r\n          <li>Gymming</li>\r\n          <li>Beaches</li>\r\n          <li>Space</li>\r\n          <li>Physics</li>\r\n        </ul>\r\n        <h4 data-testid=\"heading\" style={{ marginTop: \"2em\" }}>\r\n          Some fun facts\r\n        </h4>\r\n        <ul>\r\n          <li>Apart from coding, I love memes.</li>\r\n          <li>I don't think that was a fun fact.</li>\r\n          <li>I have a good short term memory.</li>\r\n          <li>Bad grammer is a pet peeve for me.</li>\r\n          <li>I had abs at the age of 12.</li>\r\n          <li>Now they're gone.</li>\r\n          <li>\r\n            I find it annoying that you can walk a walk or fly a fly but can’t\r\n            swim a swim.\r\n          </li>\r\n          <li>What do you call a belt made of watches? A waist of time!</li>\r\n          <li>Stop wasting time here.</li>\r\n          <li>I think this list is pointless.</li>\r\n          <li>I love most animals.</li>\r\n          <li>Except mosquitoes.</li>\r\n          <li>I love milk and not coffee while coding.</li>\r\n        </ul>\r\n        <h4 data-testid=\"heading\" style={{ marginTop: \"2em\" }}>\r\n          I Dream Of\r\n        </h4>\r\n        <ul>\r\n          <li>Buying a Lamborghini.</li>\r\n          <li>Enabling a brighter future.</li>\r\n          <li>Always giving my best.</li>\r\n          <li>\r\n            You not checking the commit history for earlier drafts of this file.\r\n          </li>\r\n        </ul>\r\n      </article>\r\n    </Main>\r\n  );\r\n}\r\n\r\nexport default ParrotAbout;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport * as emailjs from \"emailjs-com\";\r\nimport Main from \"../layout/Main\";\r\n\r\nclass ParrotContact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      message: \"\",\r\n      messageVisible: false,\r\n      disabled: false,\r\n      emailSent: false,\r\n    };\r\n    emailjs.init(\"user_FyFiRCGB6MXLQimbCVHkN\");\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      disabled: true,\r\n    });\r\n\r\n    let templateParams = {\r\n      from_name: this.state.name,\r\n      email: this.state.email,\r\n      to_name: \"harshildarji2001@gmail.com\",\r\n      message: this.state.message,\r\n    };\r\n\r\n    emailjs\r\n      .send(\r\n        \"service_frbj0kl\",\r\n        \"template_jwow0af\",\r\n        templateParams,\r\n        \"user_FyFiRCGB6MXLQimbCVHkN\"\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status) {\r\n          this.setState({\r\n            disabled: false,\r\n            emailSent: true,\r\n            messageVisible: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            disabled: false,\r\n            emailSent: false,\r\n            messageVisible: true,\r\n          });\r\n        }\r\n\r\n        setTimeout(() => {\r\n          this.setState({ messageVisible: false });\r\n        }, 5000);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n\r\n        this.setState({\r\n          disabled: false,\r\n          emailSent: false,\r\n          messageVisible: true,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          this.setState({ messageVisible: false });\r\n        }, 5000);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Main title=\"Contact\" description=\"Contact Me\">\r\n        <article className=\"post\">\r\n          <header>\r\n            <div className=\"title\">\r\n              <h2 data-testid=\"heading\">Contact Me</h2>\r\n              <p>You can directly message me from here</p>\r\n            </div>\r\n          </header>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Group>\r\n              <Form.Label htmlFor=\"full-name\">Full Name</Form.Label>\r\n              <Form.Control\r\n                id=\"full-name\"\r\n                placeholder=\"Your name\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n              <Form.Control\r\n                id=\"email\"\r\n                placeholder=\"Your email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label htmlFor=\"message\">Message</Form.Label>\r\n              <Form.Control\r\n                id=\"message\"\r\n                placeholder=\"Want to meet up for coffee?\"\r\n                name=\"message\"\r\n                as=\"textarea\"\r\n                rows=\"3\"\r\n                value={this.state.message}\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <button className=\"button\" disabled={this.state.disabled}>\r\n                Send\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.emailSent && this.state.messageVisible && (\r\n              <p className=\"d-inline success-msg\">Email Sent</p>\r\n            )}\r\n            {!this.state.emailSent && this.state.messageVisible && (\r\n              <p className=\"d-inline err-msg\">Email Not Sent</p>\r\n            )}\r\n          </Form>\r\n        </article>\r\n      </Main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ParrotContact;\r\n","import React, { Component } from \"react\";\r\nimport Main from \"../layout/Main\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Typed from \"react-typed\";\r\nimport \"./temp.scss\";\r\nimport Emoji from 'a11y-react-emoji'\r\n\r\nexport class ParrotHome extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Main title=\"Home\" description=\"Harshil Darji\">\r\n          <article className=\"post\">\r\n            <header>\r\n              <div className=\"title\">\r\n                <h2 data-testid=\"heading\">Harshil Darji</h2>\r\n                <h4>\r\n                  <Typed\r\n                    className=\"font-weight-light\"\r\n                    strings={[\r\n                      \"Web Developer\",\r\n                      \"Cloud Enthusiast\",\r\n                      \"Linux Admirer\",\r\n                      \"Open Source Fan\",\r\n                      \"Gamer\",\r\n                    ]}\r\n                    typeSpeed={70}\r\n                    backDelay={400}\r\n                    backSpeed={25}\r\n                    loop\r\n                    cursorChar=\"|\"\r\n                  />\r\n                </h4>\r\n              </div>\r\n            </header>\r\n            <p style={{ marginBottom: \"2em\" }}>\r\n              Welcome to my website. Please feel free to read more{\" \"}\r\n              <Link to=\"/about\">about me</Link>, or you can check out my{\" \"}\r\n              <Link to=\"/resume\">resume</Link>,{\" \"}\r\n              <Link to=\"/projects\">projects</Link>, or{\" \"}\r\n              <Link to=\"/contact\">contact</Link> me.\r\n            </p>\r\n            <p style={{ marginBottom: \"2em\" }}>\r\n              Cheers! <Emoji symbol=\"🧑‍💻\" label=\"tech\" />\r\n            </p>\r\n          </article>\r\n          <div class=\"x\">\r\n            <img\r\n              class=\"y\"\r\n              src=\"../assets/img/reactLogo.png\"\r\n              alt=\"codepen\"\r\n            />\r\n          </div>\r\n          {/* <Carousel repoData={this.state.repoData} /> */}\r\n        </Main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ParrotHome;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs';\r\n\r\nconst Cell = ({ data }) => (\r\n  <div className=\"cell-container\">\r\n    <article className=\"mini-post\">\r\n      <header>\r\n        <h3><a href={data.link}>{data.title}</a></h3>\r\n        <time className=\"published\">Last commit: {dayjs(data.date).format('MMMM, YYYY')}</time>\r\n      </header>\r\n      <a href={data.link} className=\"image\">\r\n        <img src={`${process.env.PUBLIC_URL}${data.image}`} alt={data.title} />\r\n      </a>\r\n      <div className=\"description\">\r\n        <p>{data.desc}</p>\r\n      </div>\r\n    </article>\r\n  </div>\r\n);\r\n\r\nCell.propTypes = {\r\n  data: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    link: PropTypes.string,\r\n    image: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    desc: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Cell;\r\n","import React from 'react';\r\nimport Main from '../layout/Main';\r\nimport Cell from '../layout/Cell';\r\n\r\nconst ParrotProjects = (props) => (\r\n  <Main\r\n    title=\"Projects\"\r\n    description=\"Harshil Darji\"\r\n  >\r\n    <article className=\"post\">\r\n      <header>\r\n        <div className=\"title\">\r\n          <h2 data-testid=\"heading\">Projects</h2>\r\n          <p>Click project to view on Github</p>\r\n        </div>\r\n      </header>\r\n      {props.data.map((project) => (\r\n        <Cell\r\n          data={project}\r\n          key={project.name}\r\n        />\r\n      ))}\r\n    </article>\r\n  </Main>\r\n);\r\n\r\nexport default ParrotProjects;\r\n","const config = {\r\n    \"icons\": [\r\n        {\r\n            \"id\": 0,\r\n            \"image\": \"fa-github\",\r\n            \"url\": \"https://github.com/harshil-darji\",\r\n            \"style\": \"socialicons\"\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"image\": \"fa-linkedin\",\r\n            \"url\": \"https://www.linkedin.com/in/harshil-darji/\",\r\n            \"style\": \"socialicons\"\r\n        },\r\n    ]\r\n}\r\n\r\nconst gitCreds = {\r\n    githubConvertedToken: \"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\",\r\n    githubUserName: \"harshil-darji\",\r\n};\r\n\r\nexport { gitCreds, config };","import axios from \"axios\";\r\nimport { gitCreds } from '../assets/configurations';\r\n\r\nconst getPinnedRepo = async () => {\r\n  const result = await axios({\r\n    url: 'https://api.github.com/graphql',\r\n    headers: { Authorization: 'Bearer ' + gitCreds.githubConvertedToken },\r\n    method: 'post',\r\n    data: {\r\n      query: `\r\n            {\r\n              user(login: \"${gitCreds.githubUserName}\") {\r\n                pinnedItems(first: 6, types: [REPOSITORY, GIST]) {\r\n                  totalCount\r\n                  edges {\r\n                    node {\r\n                      ... on Repository {\r\n                        openGraphImageUrl\r\n                        description\r\n                        url\r\n                        name\r\n                        updatedAt\r\n                        stargazers{\r\n                          totalCount\r\n                        }\r\n                        languages(first:10) {\r\n                          edges {\r\n                            node {\r\n                              id\r\n                              name\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }           \r\n      `\r\n    }\r\n  })\r\n  return result;\r\n};\r\n\r\nconst parseResult = result => {\r\n  let finalRes = [];\r\n  for(let obj of result){\r\n    finalRes.push({\r\n      title: obj.node.name,\r\n      desc: obj.node.description,\r\n      image: obj.node.openGraphImageUrl,\r\n      stars: obj.node.stargazers.totalCount,\r\n      languages: obj.node.languages.edges.map(data => {return data.node.name}),\r\n      date: obj.node.updatedAt,\r\n      link: obj.node.url\r\n    });\r\n  }\r\n  return finalRes;\r\n}\r\n\r\nconst getPinnedRepoData = async () => {\r\n  const result = await getPinnedRepo();\r\n  const parsedResult = parseResult(result.data.data.user.pinnedItems.edges);\r\n  return parsedResult;\r\n}\r\n\r\nexport default getPinnedRepoData;","export default __webpack_public_path__ + \"static/media/resume.cc4b8f89.pdf\";","import React from \"react\";\r\nimport Main from \"../layout/Main\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport resume from \"../data/resume.pdf\";\r\nimport { SizeMe } from \"react-sizeme\";\r\n\r\nfunction ParrotResume() {\r\n  pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n  return (\r\n    <Main title=\"Resume\" description=\"Harshil Darji\">\r\n      <article className=\"post\">\r\n        <header>\r\n          <div className=\"title\">\r\n            <h2 data-testid=\"heading\">Resume</h2>\r\n            <p>View or Download Resume</p>\r\n          </div>\r\n        </header>\r\n        <SizeMe>\r\n          {({ size }) => (\r\n            <Document file={resume}>\r\n              <Page pageNumber={1} width={size.width ? size.width : 1} />\r\n            </Document>\r\n          )}\r\n        </SizeMe>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <button className=\"button\">Download</button>\r\n        </div>\r\n      </article>\r\n    </Main>\r\n  );\r\n}\r\n\r\nexport default ParrotResume;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport ParrotFooter from \"./parrotComponents/ParrotFooter\";\r\nimport ParrotNavbar from \"./parrotComponents/ParrotNavbar\";\r\nimport ParrotAbout from \"./parrotPages/ParrotAbout\";\r\nimport ParrotContact from \"./parrotPages/ParrotContact\";\r\nimport ParrotHome from \"./parrotPages/ParrotHome\";\r\nimport ParrotProjects from \"./parrotPages/ParrotProjects\";\r\nimport \"./static/css/main.scss\"; // All of our styles\r\nimport getPinnedRepoData from \"./services/gitService\";\r\nimport ParrotResume from \"./parrotPages/ParrotResume\";\r\n\r\nexport class App extends Component {\r\n  async componentDidMount() {\r\n    let repoData = await getPinnedRepoData();\r\n    this.setState({ repoData });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      repoData: [],\r\n      title: \"Harshil Darji\",\r\n      headerLinks: [\r\n        { title: \"home\", path: \"/\" },\r\n        { title: \"about\", path: \"/about\" },\r\n        { title: \"contact\", path: \"/contact\" },\r\n      ],\r\n      home: {\r\n        title: \"Harshil Darji\",\r\n        subtitle: [\r\n          \"Web Developer\",\r\n          \"Cloud Enthusiast\",\r\n          \"Linux Fan\",\r\n          \"Open Source Contributor\",\r\n          \"Gamer\",\r\n        ],\r\n        text: \"Glad you found your way here!\",\r\n      },\r\n      about: {\r\n        title: \"About Me\",\r\n      },\r\n      contact: {\r\n        title: \"Let's Talk\",\r\n        subtitle: \"You can email me directly from here.\",\r\n      },\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div style={{ backgroundColor: \"#212329\" }}>\r\n          <Container className=\"p-0\" fluid={true}>\r\n            <ParrotNavbar />\r\n            <Route path=\"/\" exact render={() => <ParrotHome />} />\r\n            <Route path=\"/about\" exact render={() => <ParrotAbout />} />\r\n            <Route\r\n              path=\"/projects\"\r\n              exact\r\n              render={() => <ParrotProjects data={this.state.repoData} />}\r\n            />\r\n            <Route path=\"/resume\" exact render={() => <ParrotResume />} />\r\n            <Route path=\"/contact\" exact render={() => <ParrotContact />} />\r\n          </Container>\r\n          <ParrotFooter />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './ParrotApp';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}